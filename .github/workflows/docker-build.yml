name: Build and Push CUDA Docker Image

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# OPTIMIZATION: Cancel redundant builds on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: docker.io
  IMAGE_NAME: fireredasr-api

jobs:
  build:
    runs-on: ubuntu-latest
    # OPTIMIZATION: Add a timeout to prevent stuck jobs
    timeout-minutes: 60 
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # CRITICAL FIX: Free up disk space to prevent "No space left on device" error
    - name: Free up disk space on the runner
      run: |
        echo "Initial disk space:"
        df -h
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        echo "Disk space after cleanup:"
        df -h

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
          # NOTE: Changed cuda-12.8 to cuda-12.1 to match your initial error log.
          # Feel free to change this back if 12.8 is intended.
          type=raw,value=cuda-12.1,enable={{is_default_branch}}
          
    - name: üßê List files in workspace for debugging
      run: ls -laR
        
    - name: Build and push Docker image
      # OPTIMIZATION: Add an ID to this step for reliable output access
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Image digest
      if: github.event_name != 'pull_request'
      run: echo ${{ steps.build.outputs.digest }}
